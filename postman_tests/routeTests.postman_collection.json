{
	"info": {
		"_postman_id": "2317e4b5-fd69-4c47-ab41-28ca3e789dc3",
		"name": "routeTests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23548831"
	},
	"item": [
		{
			"name": "Verificar se existe uma rota ",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test: 404, the route does not exist\", function(){",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:3000/api/routes/getById",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"routes",
						"getById"
					]
				}
			},
			"response": []
		},
		{
			"name": "Criar uma rota",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200, the route has been created\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n        \"routeId\": \"1\",\n        \"distance\": \"31\",\n        \"routeTime\": \"74\",\n        \"batteryWaste\": \"25\",\n        \"arrivalId\": \"ESPINHO\",\n        \"departureId\": \"MAIA\",\n        \"extraTime\": \"0\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/api/routes",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"routes"
					]
				}
			},
			"response": []
		},
		{
			"name": "Verificar que agora a rota já existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200, the route exist\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n        \"routeId\": \"1\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/api/routes/getById",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"routes",
						"getById"
					]
				}
			},
			"response": []
		},
		{
			"name": "Atualizar a distância da rota",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200, the route distance has been changed\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n        \"routeId\": \"1\",\n        \"distance\": \"33\",\n        \"routeTime\": \"74\",\n        \"batteryWaste\": \"25\",\n        \"arrivalId\": \"ESPINHO\",\n        \"departureId\": \"MAIA\",\n        \"extraTime\": \"0\"\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/api/routes",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"routes"
					]
				}
			},
			"response": []
		},
		{
			"name": "Confirmar que a atualização da distância foi realizada com sucesso",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200, the route distance was updated\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Route Data updated succecfully!\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.distance).to.eql(\"33\");",
							" ",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n        \"routeId\": \"1\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/api/routes/getById",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"routes",
						"getById"
					]
				}
			},
			"response": []
		},
		{
			"name": "Atualizar o tempo da rota",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200, the time of the route has been changed\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n        \"routeId\": \"1\",\n        \"distance\": \"31\",\n        \"routeTime\": \"75\",\n        \"batteryWaste\": \"25\",\n        \"arrivalId\": \"ESPINHO\",\n        \"departureId\": \"MAIA\",\n        \"extraTime\": \"0\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/api/routes",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"routes"
					]
				}
			},
			"response": []
		},
		{
			"name": "Confirmar que a atualização do tempo da rota foi realizada com sucesso",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200, the route time was updated\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Route Data updated succecfully!\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.routeTime).to.eql(\"75\");",
							" ",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n        \"routeId\": \"1\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/api/routes/getById",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"routes",
						"getById"
					]
				}
			},
			"response": []
		},
		{
			"name": "Atualizar a energia gasta",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200, the battery waste has been changed\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n        \"routeId\": \"1\",\n        \"distance\": \"31\",\n        \"routeTime\": \"74\",\n        \"batteryWaste\": \"26\",\n        \"arrivalId\": \"ESPINHO\",\n        \"departureId\": \"MAIA\",\n        \"extraTime\": \"0\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/api/routes",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"routes"
					]
				}
			},
			"response": []
		},
		{
			"name": "Confirmar que a atualização da energia gasta foi realizada com sucesso",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200, the battery waste was updated\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Route Data updated succecfully!\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.batteryWaste).to.eql(\"26\");",
							" ",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n        \"routeId\": \"1\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/api/routes/getById",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"routes",
						"getById"
					]
				}
			},
			"response": []
		},
		{
			"name": "Atualizar o armazém de chegada",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200, the warehouse arrivalId has been changed\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n        \"routeId\": \"1\",\n        \"distance\": \"31\",\n        \"routeTime\": \"74\",\n        \"batteryWaste\": \"25\",\n        \"arrivalId\": \"GONDOMAR\",\n        \"departureId\": \"MAIA\",\n        \"extraTime\": \"0\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/api/routes",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"routes"
					]
				}
			},
			"response": []
		},
		{
			"name": "Confirmar que a atualização do armazém de chegada foi realizada com sucesso",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200, the warehouse arrivalId was updated\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Route Data updated succecfully!\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.arrivalId).to.eql(\"GONDOMAR\");",
							" ",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n        \"routeId\": \"1\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/api/routes/getById",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"routes",
						"getById"
					]
				}
			},
			"response": []
		},
		{
			"name": "Atualizar o armazém de partida",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200, the warehouse departureId has been changed\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n        \"routeId\": \"1\",\n        \"distance\": \"31\",\n        \"routeTime\": \"74\",\n        \"batteryWaste\": \"25\",\n        \"arrivalId\": \"ESPINHO\",\n        \"departureId\": \"MATOSINHOS\",\n        \"extraTime\": \"0\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/api/routes",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"routes"
					]
				}
			},
			"response": []
		},
		{
			"name": "Confirmar que a atualização do armazém de partida foi realizada com sucesso",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200, the warehouse departureId was updated\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Route Data updated succecfully!\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.departureId).to.eql(\"MATOSINHOS\");",
							" ",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n        \"routeId\": \"1\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/api/routes/getById",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"routes",
						"getById"
					]
				}
			},
			"response": []
		},
		{
			"name": "Atualizar o tempo extra",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200, the extra time has been changed\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n        \"routeId\": \"1\",\n        \"distance\": \"31\",\n        \"routeTime\": \"74\",\n        \"batteryWaste\": \"25\",\n        \"arrivalId\": \"ESPINHO\",\n        \"departureId\": \"MAIA\",\n        \"extraTime\": \"10\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/api/routes",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"routes"
					]
				}
			},
			"response": []
		},
		{
			"name": "Confirmar que a atualização do tempo extra foi realizada com sucesso",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200, the extra time was updated\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Route Data updated succecfully!\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.extraTime).to.eql(\"10\");",
							" ",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n        \"routeId\": \"1\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/api/routes/getById",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"routes",
						"getById"
					]
				}
			},
			"response": []
		},
		{
			"name": "Listar rota pelo Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200, the route available by id\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n        \"routeId\": \"1\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/api/routes/getById",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"routes",
						"getById"
					]
				}
			},
			"response": []
		},
		{
			"name": "Listar todas as rotas",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200, all the routes available\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:3000/api/routes/getRoutes",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"routes",
						"getRoutes"
					]
				}
			},
			"response": []
		}
	]
}